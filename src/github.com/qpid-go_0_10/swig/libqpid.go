/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: libqpid.i

package libqpid

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


typedef _gostring_ swig_type_1;
typedef _gostring_ swig_type_2;
extern void _wrap_Swig_free_libqpid_74154ab5070a2182(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_libqpid_74154ab5070a2182(swig_intgo arg1);
extern uintptr_t _wrap_new_QpidConnection_libqpid_74154ab5070a2182(swig_type_1 arg1, swig_type_2 arg2);
extern void _wrap_delete_QpidConnection_libqpid_74154ab5070a2182(uintptr_t arg1);
extern void _wrap_QpidConnection_Open_libqpid_74154ab5070a2182(uintptr_t arg1);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"


type _ unsafe.Pointer



var Swig_escape_always_false bool
var Swig_escape_val interface{}


type _swig_fnptr *byte
type _swig_memberptr *byte


type _ sync.Mutex

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_libqpid_74154ab5070a2182(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_libqpid_74154ab5070a2182(C.swig_intgo(_swig_i_0)))
	return swig_r
}

type SwigcptrQpidConnection uintptr

func (p SwigcptrQpidConnection) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrQpidConnection) SwigIsQpidConnection() {
}

func NewQpidConnection(arg1 string, arg2 string) (_swig_ret QpidConnection) {
	var swig_r QpidConnection
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (QpidConnection)(SwigcptrQpidConnection(C._wrap_new_QpidConnection_libqpid_74154ab5070a2182(*(*C.swig_type_1)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_2)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func DeleteQpidConnection(arg1 QpidConnection) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_QpidConnection_libqpid_74154ab5070a2182(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrQpidConnection) Open() {
	_swig_i_0 := arg1
	C._wrap_QpidConnection_Open_libqpid_74154ab5070a2182(C.uintptr_t(_swig_i_0))
}

type QpidConnection interface {
	Swigcptr() uintptr
	SwigIsQpidConnection()
	Open()
}


